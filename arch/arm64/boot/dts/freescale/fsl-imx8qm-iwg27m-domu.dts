/*
 * Copyright 2018 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/clock/imx8qm-clock.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/imx_rsrc.h>
#include <dt-bindings/soc/imx8_hsio.h>
#include <dt-bindings/soc/imx8_pd.h>
#include <dt-bindings/pinctrl/pads-imx8qm.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/thermal/thermal.h>

/ {
	model = "iW-RainboW-G27D-i.MX8QM_SMARC DOMU";
	compatible = "fsl,imx8qm-iwg27m", "fsl,imx8qm", "xen,xenvm-4.10", "xen,xenvm";
	interrupt-parent = <&gic>;
	#address-cells = <0x2>;
	#size-cells = <0x2>;

	/delete-node/ aliases;

	aliases {
		mmc0 = &usdhc1;
		mmc2 = &usdhc3;
		dpu0 = &dpu1;
		dpu1 = &dpu2;
		ethernet0 = &fec1;
		dsi_phy0 = &mipi_dsi_phy1;
		mipi_dsi0 = &mipi_dsi1;
		ldb0 = &ldb1;
		ldb1 = &ldb2;
		usbphy0 = &usbphy1;
		serial1 = &lpuart1;
	};

	cpus {
		#address-cells = <0x2>;
		#size-cells = <0x0>;

		cpu@0 {
			device_type = "cpu";
			compatible = "arm,armv8";
			enable-method = "psci";
			reg = <0x0 0x0>;
		};

		cpu@1 {
			device_type = "cpu";
			compatible = "arm,armv8";
			enable-method = "psci";
			reg = <0x0 0x1>;
		};
                cpu@2 {
                        device_type = "cpu";
                        compatible = "arm,armv8";
                        enable-method = "psci";
                        reg = <0x0 0x2>;
                };

                cpu@3 {
                        device_type = "cpu";
                        compatible = "arm,armv8";
                        enable-method = "psci";
                        reg = <0x0 0x3>;
                };
	};

	psci {
		compatible = "arm,psci-1.0";
		method = "hvc";
	};

	memory@80000000 {
		device_type = "memory";
		/* Will be updated by U-Boot or XEN TOOL */
		reg = <0x00000000 0x80000000 0 0x80000000>;
	};

	/*
	 * The reserved memory will be used when using U-Boot loading android
	 * image. For booting kernel using xl tool, pass args:
	 * cma=960M@2400M-3584M
	 * For the rpmsg_reserved area, need xl tool to create for non-android.
	 */
	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		passthrough;

		/*
		 * reserved-memory layout
		 * 0x8800_0000 ~ 0x8FFF_FFFF is reserved for M4
		 * Shouldn't be used at A core and Linux side.
		 *
		 */

		rpmsg_reserved: rpmsg@0x90100000 {
			no-map;
			reg = <0 0x90100000 0 0x10000>;
		};

		/* global autoconfigured region for contiguous allocations */
		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0 0x3c000000>;
			alloc-ranges = <0 0x96000000 0 0x3c000000>;
			linux,cma-default;
		};
	};

	gic: interrupt-controller@3001000 {
		compatible = "arm,gic-v3";
		#interrupt-cells = <3>;
		#address-cells = <0x0>;
		interrupt-controller;
		redistributor-stride = <0x20000>;
		#redistributor-regions = <0x1>;
		reg = <0x0 0x3001000 0 0x10000>, /* GIC Dist */
		      <0x0 0x3020000 0 0x1000000>; /* GICR */
		interrupts = <GIC_PPI 9 (GIC_CPU_MASK_SIMPLE(6) | IRQ_TYPE_LEVEL_HIGH)>;
		interrupt-parent = <&gic>;
		linux,phandle = <0xfde8>;
		phandle = <0xfde8>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(6) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(6) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(6) | IRQ_TYPE_LEVEL_LOW)>;
		interrupt-parent = <&gic>;
		clock-frequency = <8000000>;
	};

	hypervisor {
		compatible = "xen,xen-4.11", "xen,xen";
		reg = <0x0 0x38000000 0x0 0x1000000>;
		interrupts = <GIC_PPI 15 (GIC_CPU_MASK_SIMPLE(6) | IRQ_TYPE_LEVEL_LOW)>;
		interrupt-parent = <&gic>;
	};

	passthrough {
		compatible = "simple-bus";
		ranges;
		#address-cells = <2>;
		#size-cells = <2>;

		firmware {
			android {
				compatible = "android,firmware";
				fstab {
					compatible = "android,fstab";
					vendor {
						compatible = "android,vendor";
						/* emmc node which used if androidboot.storage_type=emmc */
						dev_emmc = "/dev/block/platform/passthrough/15b010000.usdhc/by-name/vendor";
						type = "ext4";
						mnt_flags = "ro,barrier=1,inode_readahead_blks=8";
						fsmgr_flags = "wait,slotselect,avb";
					};
				};

				vbmeta {
					/*we need use FirstStageMountVBootV2 if we enable avb*/
					compatible = "android,vbmeta";
					/*parts means the partition witch can be mount in first stage*/
					parts = "vbmeta,boot,system,vendor";
				};
			};
		};

		clk: clk {
			compatible = "fsl,imx8qm-clk";
			#clock-cells = <1>;
			fsl,lpcg_base_offset = <0x00000000 0x00000000>;
		};

		iomuxc: iomuxc {
			compatible = "fsl,imx8qm-iomuxc";
		};

	        clocks {
	                #address-cells = <1>;
	                #size-cells = <0>;
		        audioclk: ext26Mz {
		                compatible = "fixed-clock";
		                clock-frequency = <26000000>;
		                reg=<0>;
		                #clock-cells = <0>;
        	        };
	        };

	        regulators {
	                compatible = "simple-bus";
	                #address-cells = <1>;
	                #size-cells = <0>;

	                reg_touch: regulator@0 {
	                        compatible = "regulator-fixed";
	                        reg = <2>;
	                        regulator-name = "touch-en";
	                        regulator-min-microvolt = <3300000>;
	                        regulator-max-microvolt = <3300000>;
	                        regulator-always-on;
	                };

	                reg_3p3v: 3p3v {
	                        compatible = "regulator-fixed";
	                        regulator-name = "3P3V";
	                        regulator-min-microvolt = <3300000>;
	                        regulator-max-microvolt = <3300000>;
	                        regulator-always-on;
	                        regulator-boot-on;
	                };

	                reg_1p5v: 1p5v {
	                        compatible = "regulator-fixed";
	                        regulator-name = "1P5V";
	                        regulator-min-microvolt = <1500000>;
	                        regulator-max-microvolt = <1500000>;
	                        regulator-always-on;
	                };

	                reg_1p8v: 1p8v {
	                        compatible = "regulator-fixed";
	                        regulator-name = "1P8V";
	                        regulator-min-microvolt = <1800000>;
	                        regulator-max-microvolt = <1800000>;
	                        regulator-always-on;
	                };

	                reg_usb_en: regulator-usb-en {
	                        compatible = "regulator-fixed";
	                        regulator-name = "usb_en";
	                        regulator-min-microvolt = <1200000>;
	                        regulator-max-microvolt = <1200000>;
	                        regulator-type = "voltage";
	                        gpio = <&gpio4 7 GPIO_ACTIVE_HIGH>;
	                        enable-active-high;
	                };

	        };

	        sound {
	                compatible = "fsl,imx-audio-sgtl5000";
	                model = "sgtl5000-audio";
	                ssi-controller = <&sai1>;
	                audio-codec = <&codec>;
	                audio-routing = "MIC_IN", "Mic Jack",
	                                "Mic Jack", "Mic Bias",
	                                "Headphone Jack", "HP_OUT",
	                                "LINE_IN", "Line In Jack";
	        };


		#include "fsl-imx8qm-device.dtsi"

		mu2: mu@5d1d0000 {
			compatible = "fsl,imx8-mu";
			reg = <0x0 0x5d1d0000 0x0 0x10000>;
			interrupts = <GIC_SPI 178 IRQ_TYPE_LEVEL_HIGH>;
			fsl,scu_ap_mu_id = <0>;
			status = "okay";
		};

		usb_lpcg {
			reg = <0x0 0x5b270000 0x0 0x10000>;
		};

                edma01: dma-controller1@5a1f0000 {
                        compatible = "fsl,imx8qm-edma";
                        reg = <0x0 0x5a2e0000 0x0 0x10000>, /* channel14 UART1 rx */
                              <0x0 0x5a2f0000 0x0 0x10000>; /* channel15 UART1 tx */
                        #dma-cells = <3>;
                        dma-channels = <2>;
                        interrupts = <GIC_SPI 436 IRQ_TYPE_LEVEL_HIGH>,
                                     <GIC_SPI 437 IRQ_TYPE_LEVEL_HIGH>;
                        interrupt-names = "edma0-chan14-rx", "edma0-chan15-tx";
                        status = "okay";
                };

                edma20: dma-controller@591f0000 {
                        compatible = "fsl,imx8qm-adma";
                        reg = <0x0 0x59200000 0x0 0x10000>, /* asrc0 */
                                <0x0 0x59210000 0x0 0x10000>,
                                <0x0 0x59220000 0x0 0x10000>,
                                <0x0 0x59230000 0x0 0x10000>,
                                <0x0 0x59240000 0x0 0x10000>,
                                <0x0 0x59250000 0x0 0x10000>;
                        #dma-cells = <3>;
                        shared-interrupt;
                        dma-channels = <6>;
                        interrupts = <GIC_SPI 374 IRQ_TYPE_LEVEL_HIGH>, /* asrc0 */
                                        <GIC_SPI 375 IRQ_TYPE_LEVEL_HIGH>,
                                        <GIC_SPI 376 IRQ_TYPE_LEVEL_HIGH>,
                                        <GIC_SPI 377 IRQ_TYPE_LEVEL_HIGH>,
                                        <GIC_SPI 378 IRQ_TYPE_LEVEL_HIGH>,
                                        <GIC_SPI 379 IRQ_TYPE_LEVEL_HIGH>;
                        interrupt-names = "edma2-chan0-rx", "edma2-chan1-rx", /* asrc0 */
                                        "edma2-chan2-rx", "edma2-chan3-tx",
                                        "edma2-chan4-tx", "edma2-chan5-tx";
                        status = "okay";
                };

                edma21: dma-controller@0x59260000 {
                        compatible = "fsl,imx8qm-adma";
                        reg = <0x0 0x59260000 0x0 0x10000>, /* esai0 rx */
                              <0x0 0x59270000 0x0 0x10000>; /* esai0 tx */
                        #dma-cells = <3>;
                        shared-interrupt;
                        dma-channels = <2>;
                        interrupts = <GIC_SPI 410 IRQ_TYPE_LEVEL_HIGH>, /* esai0 */
                                     <GIC_SPI 410 IRQ_TYPE_LEVEL_HIGH>;
                        interrupt-names = "edma2-chan6-rx", "edma2-chan7-tx"; /* esai0 */
                        status = "okay";
                };

                edma24: dma-controller@0x592c0000 {
                        compatible = "fsl,imx8qm-adma";
                        reg = <0x0 0x592c0000 0x0 0x10000>, /* sai0 rx */
                              <0x0 0x592d0000 0x0 0x10000>; /* sai0 tx */
                        #dma-cells = <3>;
                        shared-interrupt;
                        dma-channels = <2>;
                        interrupts = <GIC_SPI 315 IRQ_TYPE_LEVEL_HIGH>, /* sai0 */
                                     <GIC_SPI 315 IRQ_TYPE_LEVEL_HIGH>;
                        interrupt-names = "edma2-chan12-rx", "edma2-chan13-tx"; /* sai0 */
                        fsl,sc_rsrc_id = <SC_R_DMA_2_CH12>,
                                         <SC_R_DMA_2_CH13>;
                        status = "okay";
                };

	        edma25: dma-controller@0x592e0000 {
	                compatible = "fsl,imx8qm-adma";
	                reg = <0x0 0x592e0000 0x0 0x10000>, /* sai1 rx */
	                      <0x0 0x592f0000 0x0 0x10000>; /* sai1 tx */
	                #dma-cells = <3>;
	                shared-interrupt;
	                dma-channels = <2>;
	                interrupts = <GIC_SPI 317 IRQ_TYPE_LEVEL_HIGH>, /* sai1 */
	                             <GIC_SPI 317 IRQ_TYPE_LEVEL_HIGH>;
	                interrupt-names = "edma2-chan14-rx", "edma2-chan15-tx"; /* sai1 */
	                fsl,sc_rsrc_id = <SC_R_DMA_2_CH14>,
	                                 <SC_R_DMA_2_CH15>;
	                status = "okay";
	        };

                xen_i2c0: xen_i2c@0 {
                        compatible = "xen,i2c";
                        be-adapter = "5a800000.i2c";
                        status = "okay";
                };
/*
                xen_i2c1: xen_i2c@1 {
                        compatible = "xen,i2c";
                        be-adapter = "5a810000.i2c";
                        status = "okay";
                };

                xen_i2c2: xen_i2c@2 {
                        compatible = "xen,i2c";
                        be-adapter = "5a820000.i2c";
                        status = "okay";
                };
*/

	};
};

/delete-node/ &tsens;
/delete-node/ &thermal_zones;
/delete-node/ &rtc;

&display {
	ports = <&dpu1_disp0>, <&dpu1_disp1>;
};

&dpu1_intsteer {
        reg = <0x0 0x56000000 0x0 0x10000>;
        status = "okay";
};

&prg1 {
        reg = <0x0 0x56040000 0x0 0x10000>;
        status = "okay";
};

&prg2 {
        reg = <0x0 0x56050000 0x0 0x10000>;
        status = "okay";
};

&prg3 {
        reg = <0x0 0x56060000 0x0 0x10000>;
        status = "okay";
};

&prg4 {
        reg = <0x0 0x56070000 0x0 0x10000>;
        status = "okay";
};

&prg5 {
        reg = <0x0 0x56080000 0x0 0x10000>;
        status = "okay";
};

&prg6 {
        reg = <0x0 0x56090000 0x0 0x10000>;
        status = "okay";
};

&prg7 {
        reg = <0x0 0x560a0000 0x0 0x10000>;
        status = "okay";
};

&prg8 {
        reg = <0x0 0x560b0000 0x0 0x10000>;
        status = "okay";
};

&prg9 {
        reg = <0x0 0x560c0000 0x0 0x10000>;
        status = "okay";
};

&dpr1_channel1 {
        reg = <0x0 0x560d0000 0x0 0x10000>;
        status = "okay";
};

&dpr1_channel2 {
        reg = <0x0 0x560e0000 0x0 0x10000>;
        status = "okay";
};

&dpr1_channel3 {
        reg = <0x0 0x560f0000 0x0 0x10000>;
        status = "okay";
};

&dpr2_channel1 {
        reg = <0x0 0x56100000 0x0 0x10000>;
        status = "okay";
};

&dpr2_channel2 {
        reg = <0x0 0x56110000 0x0 0x10000>;
        status = "okay";
};

&dpr2_channel3 {
        reg = <0x0 0x56120000 0x0 0x10000>;
        status = "okay";
};

&dpu1 {
        reg = <0x0 0x56180000 0x0 0x40000>;
        status = "okay";

        dpu1_disp0: port@0 {

		dpu1_disp0_hdmi: hdmi-endpoint {
			/delete-property/ remote-endpoint;
		};

        };
        dpu1_disp1: port@1 {
                reg = <1>;

                dpu1_disp1_lvds0: lvds0-endpoint {
                        remote-endpoint = <&ldb1_lvds0>;
                };

                dpu1_disp1_lvds1: lvds1-endpoint {
                        remote-endpoint = <&ldb1_lvds1>;
                };
        };
};

&dpu2_intsteer {
	reg = <0x0 0x57000000 0x0 0x10000>;
	status = "disabled";
};

&prg10 {
	reg = <0x0 0x57040000 0x0 0x10000>;
	status = "disabled";
};

&prg11 {
	reg = <0x0 0x57050000 0x0 0x10000>;
	status = "disabled";
};

&prg12 {
	reg = <0x0 0x57060000 0x0 0x10000>;
	status = "disabled";
};

&prg13 {
	reg = <0x0 0x57070000 0x0 0x10000>;
	status = "disabled";
};

&prg14 {
	reg = <0x0 0x57080000 0x0 0x10000>;
	status = "disabled";
};

&prg15 {
	reg = <0x0 0x57090000 0x0 0x10000>;
	status = "disabled";
};

&prg16 {
	reg = <0x0 0x570a0000 0x0 0x10000>;
	status = "disabled";
};

&prg17 {
	reg = <0x0 0x570b0000 0x0 0x10000>;
	status = "disabled";
};

&prg18 {
	reg = <0x0 0x570c0000 0x0 0x10000>;
	status = "disabled";
};

&dpr3_channel1 {
	reg = <0x0 0x570d0000 0x0 0x10000>;
	status = "disabled";
};

&dpr3_channel2 {
	reg = <0x0 0x570e0000 0x0 0x10000>;
	status = "disabled";
};

&dpr3_channel3 {
	reg = <0x0 0x570f0000 0x0 0x10000>;
	status = "disabled";
};

&dpr4_channel1 {
	reg = <0x0 0x57100000 0x0 0x10000>;
	status = "disabled";
};

&dpr4_channel2 {
	reg = <0x0 0x57110000 0x0 0x10000>;
	status = "disabled";
};

&dpr4_channel3 {
	reg = <0x0 0x57120000 0x0 0x10000>;
	status = "disabled";
};

&dpu2 {
	reg = <0x0 0x57180000 0x0 0x40000>;
	status = "disabled";

	dpu2_disp0: port@0 {
		dpu2_disp0_mipi_dsi: mipi-dsi-endpoint {
			/delete-property/ remote-endpoint;
		};
	};
	dpu2_disp1: port@1 {
		reg = <1>;

		dpu2_disp1_lvds0: lvds0-endpoint {
			remote-endpoint = <&ldb2_lvds0>;
		};

		dpu2_disp1_lvds1: lvds1-endpoint {
			remote-endpoint = <&ldb2_lvds1>;
		};
	};
};

/*
/delete-node/ &hdmi;
/delete-node/ &irqsteer_dsi0;
/delete-node/ &i2c0_mipi_dsi0;
*/

&lvds_region1 {
        reg = <0x0 0x56240000 0x0 0x10000>;
        status = "disabled";
};

&ldb1_phy {
        reg = <0x0 0x56241000 0x0 0x100>;
        status = "disabled";
};

&ldb1 {
        status = "disabled";

        lvds-channel@0 {
                fsl,data-mapping = "jeida";
                fsl,data-width = <24>;
                status = "okay";

                port@1 {
                        reg = <1>;

                        lvds1_out: endpoint {
                                remote-endpoint = <&it6263_1_in>;
                        };
                };
        };
};

&lvds_region2 {
	reg = <0x0 0x57240000 0x0 0x10000>;
	status = "disabled";
};

&ldb2_phy {
	reg = <0x0 0x57241000 0x0 0x100>;
	status = "disabled";
};

&ldb2 {
	status = "disabled";

	lvds-channel@0 {
		fsl,data-mapping = "jeida";
		fsl,data-width = <24>;
		status = "okay";

		port@1 {
			reg = <1>;

			lvds2_out: endpoint {
				remote-endpoint = <&it6263_1_in>;
			};
		};
	};
};

/*
/delete-node/ &lvds0_pwm;
/delete-node/ &dpu1_intsteer;
/delete-node/ &prg1;
/delete-node/ &prg2;
/delete-node/ &prg3;
/delete-node/ &prg4;
/delete-node/ &prg5;
/delete-node/ &prg6;
/delete-node/ &prg7;
/delete-node/ &prg8;
/delete-node/ &prg9;
/delete-node/ &dpr1_channel1;
/delete-node/ &dpr1_channel2;
/delete-node/ &dpr1_channel3;
/delete-node/ &dpr2_channel1;
/delete-node/ &dpr2_channel2;
/delete-node/ &dpr2_channel3;
/delete-node/ &dpu1;
*/

/delete-node/ &irqsteer_dsi1;
/delete-node/ &i2c0_mipi_dsi1;
/delete-node/ &mipi_dsi_csr2;
/delete-node/ &mipi_dsi_phy2;
/delete-node/ &mipi_dsi2;
/delete-node/ &mipi_dsi_bridge2;
/* /delete-node/ &lvds_region1;
/delete-node/ &lvds1_pwm;
*/

/delete-node/ &camera;
/delete-node/ &i2c0;
/* /delete-node/ &i2c1;*/
/* /delete-node/ &i2c2;*/
/delete-node/ &i2c3;
/delete-node/ &i2c4;
/delete-node/ &i2c0_cm40;
/delete-node/ &i2c0_cm41;
/* /delete-node/ &irqsteer_hdmi;*/
/delete-node/ &i2c0_hdmi;

&irqsteer_lvds1 {
	reg = <0x0 0x57240000 0x0 0x1000>;
	/delete-property/ interrupt-parent;
	status = "okay";
};

/delete-node/ &flexcan1;
/delete-node/ &flexcan2;
/delete-node/ &flexcan3;

&i2c1_lvds1 {
	reg = <0x0 0x57247000 0x0 0x1000>;
	status = "disabled";
};

/delete-node/ &irqsteer_lvds0;
/delete-node/ &i2c1_lvds0;
/delete-node/ &irqsteer_csi0;
/delete-node/ &i2c0_mipi_csi0;
/delete-node/ &irqsteer_csi1;
/delete-node/ &i2c0_mipi_csi1;
/delete-node/ &lpspi0;
/delete-node/ &lpuart0;

&lpuart1 { /* BT */
	reg = <0x0 0x5a070000 0 0x1000>;
	dmas = <&edma01 15 0 0>, <&edma01 14 0 1>;
	interrupt-parent = <&gic>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_lpuart1>;
        device_type = "serial";
        port-number = <1>;
        status = "okay";
};


/delete-node/ &lpuart2;
/delete-node/ &lpuart3;
/delete-node/ &lpuart4;
/delete-node/ &edma0;
/delete-node/ &edma2;
/delete-node/ &edma3;

&gpio0 {
	/delete-property/ power-domains;
	status = "okay";
};
&gpio1 {
	/delete-property/ power-domains;
	status = "okay";
};
&gpio2 {
	/delete-property/ power-domains;
	status = "okay";
};
&gpio3 {
	/delete-property/ power-domains;
	status = "disabled";
};
&gpio4 {
	/delete-property/ power-domains;
	status = "okay";
};
&gpio5 {
	/delete-property/ power-domains;
	status = "okay";
};
&gpio6 {
	/delete-property/ power-domains;
	status = "disabled";
};
&gpio7 {
	/delete-property/ power-domains;
	status = "disabled";
};

/delete-node/ &gpio0_mipi_csi0;
/delete-node/ &gpio0_mipi_csi1;
/delete-node/ &gpt0;
/delete-node/ &pwm0;
/delete-node/ &pwm1;
/delete-node/ &pwm2;
/delete-node/ &pwm3;
/delete-node/ &pwm4;
/delete-node/ &pwm5;
/delete-node/ &pwm6;
/delete-node/ &pwm7;

&gpu_3d1 {
	reg = <0x0 0x54100000 0 0x40000>;
	status = "okay";
};

/delete-node/ &gpu_3d0;

&imx8_gpu_ss {
	/* xen guests have 2GB of low RAM @ 2GB */
	reg = <0x0 0x80000000 0x0 0x80000000>;
	reg-names = "phys_baseaddr";
	cores = <&gpu_3d1>;
	status = "okay";
};

/delete-node/ &mlb;

&usdhc1 {
	compatible = "fsl,imx8qm-usdhc", "fsl,imx6sl-usdhc";
	/*interrupt-parent = <&gic>;*/
	/delete-property/ interrupt-parent;
	reg = <0x0 0x5b010000 0x0 0x10000>;
};

/delete-node/ &usdhc2;
/delete-node/ &fec2;

&usbmisc1 {
	reg = <0x0 0x5b0d0200 0x0 0x200>;
	status = "okay";
};

&usbmisc2 {
	reg = <0x0 0x5b0e0200 0x0 0x200>;
	status = "okay";
};

&usbphy1 {
	reg = <0x0 0x5b100000 0x0 0x200>;
	status = "okay";
};

/delete-node/ &usbh1;

&usbphynop1 {
        status = "okay";
};

/delete-node/ &usbphynop2;

&usbotg1 {
	reg = <0x0 0x5b0d0000 0x0 0x200>;
	interrupt-parent = <&gic>;
};

/delete-node/ &ddr_pmu0;
/delete-node/ &ddr_pmu1;
/delete-node/ &vpu;
/delete-node/ &acm;

&esai0 {
        compatible = "fsl,imx8qm-esai";
        reg = <0x0 0x59010000 0x0 0x10000>;
        interrupts = <GIC_SPI 409 IRQ_TYPE_LEVEL_HIGH>;
        clocks = <&clk IMX8QM_AUD_ESAI_0_IPG>,
                 <&clk IMX8QM_AUD_ESAI_0_EXTAL_IPG>,
                 <&clk IMX8QM_AUD_ESAI_0_IPG>,
                 <&clk IMX8QM_CLK_DUMMY>;
        clock-names = "core", "extal", "fsys", "spba";
        dmas = <&edma21 6 0 1>, <&edma21 7 0 0>;
        dma-names = "rx", "tx";
        power-domains = <&pd_esai0>;
        status = "disabled";
};


/delete-node/ &spdif0;
/* /delete-node/ &sai1;*/
/delete-node/ &sai0;
/delete-node/ &sai_hdmi_rx;
/delete-node/ &sai_hdmi_tx;
/delete-node/ &sai6;
/delete-node/ &sai7;
/delete-node/ &amix;
/delete-node/ &asrc0;
/delete-node/ &asrc1;
/delete-node/ &mqs;
/delete-node/ &flexspi0;

&dma_cap {
	compatible = "dma-capability";
	only-dma-mask32 = <1>;
};

/delete-node/ &hsio;
/delete-node/ &ocotp;
/delete-node/ &pciea;
/delete-node/ &pcieb;
/delete-node/ &sata;

/delete-node/ &intmux_cm40;
/delete-node/ &mu_rpmsg;
/*
/delete-node/ &intmux_cm41;
*/
&rpmsg1{
	/*
	 * 64K for one rpmsg instance:
	 */
	vdev-nums = <1>;
	reg = <0x0 0x90100000 0x0 0x10000>;
	status = "disabled";
};

&mu_rpmsg1 {
	reg = <0x0 0x5d210000 0x0 0x10000>;
};

/delete-node/ &crypto;
/delete-node/ &caam_sm;
/delete-node/ &sc_pwrkey;
/delete-node/ &wdog;
/delete-node/ &wu;

&iomuxc {
	imx8qm-iwg27m {
		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000041
				SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000021
				SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000021
				SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000021
				SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000021
				SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000021
				SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000021
				SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000021
				SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000021
				SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000021
				SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x06000041
				SC_P_EMMC0_RESET_B_CONN_EMMC0_RESET_B	0x00000021
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000040
				SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000020
				SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000020
				SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000020
				SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000020
				SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000020
				SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000020
				SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000020
				SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000020
				SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000020
				SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x06000040
				SC_P_EMMC0_RESET_B_CONN_EMMC0_RESET_B	0x00000020
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000040
				SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000020
				SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000020
				SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000020
				SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000020
				SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000020
				SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000020
				SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000020
				SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000020
				SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000020
				SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x06000040
				SC_P_EMMC0_RESET_B_CONN_EMMC0_RESET_B	0x00000020
			>;
		};

                pinctrl_usbotg1: usbotg1 {
                        fsl,pins = <
                                SC_P_USB_SS3_TC0_LSIO_GPIO4_IO03                0x00000021
                        >;
                };

                pinctrl_usbotg3: usbotg3 {
                        fsl,pins = <
                                SC_P_USDHC1_RESET_B_LSIO_GPIO4_IO07             0x00000021
                                SC_P_MIPI_DSI1_I2C0_SDA_LSIO_GPIO1_IO21         0x00000021

                        >;
                };

                pinctrl_type_c: usbtypec {
                        fsl,pins = <
                                SC_P_SIM0_CLK_LSIO_GPIO0_IO00                   0x00000021
                                SC_P_USDHC1_STROBE_LSIO_GPIO5_IO23              0x00000021
                        >;
                };

		pinctrl_lvds1_lpi2c1: lvds1lpi2c1grp {
			fsl,pins = <
				SC_P_LVDS1_I2C1_SCL_LVDS1_I2C1_SCL	0xc600004c
				SC_P_LVDS1_I2C1_SDA_LVDS1_I2C1_SDA	0xc600004c
			>;
		};

                pinctrl_lpuart1: lpuart1grp {
                        fsl,pins = <
                                SC_P_UART1_RX_DMA_UART1_RX                      0x06000020
                                SC_P_UART1_TX_DMA_UART1_TX                      0x06000020
                                SC_P_UART1_CTS_B_DMA_UART1_CTS_B                0x06000020
                                SC_P_UART1_RTS_B_DMA_UART1_RTS_B                0x06000020
                        >;
                };

                pinctrl_mipi_dsi: mipidsi {
                        fsl,pins = <
                                SC_P_SIM0_PD_LSIO_GPIO0_IO03                    0x00000021
                        >;
                };

                pinctrl_ts_active_iwg27m: touch {
                        fsl,pins = <
                                SC_P_SIM0_RST_LSIO_GPIO0_IO01                   0x00000021
                                SC_P_M41_I2C0_SCL_LSIO_GPIO0_IO10               0x18300021
                        >;
                };

                pinctrl_sai1: sai1grp {
                        fsl,pins = <
                                SC_P_SAI1_RXD_AUD_SAI1_RXD                      0xc600004c
                                SC_P_SAI1_TXC_AUD_SAI1_TXC                      0xc600004c
                                SC_P_SAI1_TXD_AUD_SAI1_TXD                      0xc600004c
                                SC_P_SAI1_TXFS_AUD_SAI1_TXFS                    0xc600004c
                                SC_P_MCLK_OUT0_AUD_ACM_MCLK_OUT0                0xc600004c
                        >;
                };

                pinctrl_hp_mic_detect: hp_mic_detect {
                        fsl,pins = <
                                SC_P_SIM0_IO_LSIO_GPIO0_IO02                    0x00000021
                                SC_P_SIM0_GPIO0_00_LSIO_GPIO0_IO05              0x00000021
                        >;
                };

                pinctrl_lpi2c1: lpi2c1grp {
                        fsl,pins = <
                                SC_P_GPT0_CLK_DMA_I2C1_SCL                      0xc600004c
                                SC_P_GPT0_CAPTURE_DMA_I2C1_SDA                  0xc600004c
                        >;
                };

                pinctrl_lpi2c2: lpi2c2grp {
                        fsl,pins = <
                                SC_P_GPT1_CLK_DMA_I2C2_SCL                      0xc600004c
                                SC_P_GPT1_CAPTURE_DMA_I2C2_SDA                  0xc600004c
                        >;
                };

                pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
                        fsl,pins = <
                                SC_P_USDHC1_CLK_CONN_USDHC1_CLK                 0x06000040
                                SC_P_USDHC1_CMD_CONN_USDHC1_CMD                 0x00000020
                                SC_P_USDHC1_DATA0_CONN_USDHC1_DATA0             0x00000020
                                SC_P_USDHC1_DATA1_CONN_USDHC1_DATA1             0x00000020
                                SC_P_USDHC1_DATA2_CONN_USDHC1_DATA2             0x00000020
                                SC_P_USDHC1_DATA3_CONN_USDHC1_DATA3             0x00000020
                                SC_P_USDHC2_VSELECT_CONN_USDHC2_VSELECT         0x00000020
                        >;
                };

                pinctrl_usdhc3: usdhc3grp {
                        fsl,pins = <
                                SC_P_USDHC2_CLK_CONN_USDHC2_CLK                 0x06000041
                                SC_P_USDHC2_CMD_CONN_USDHC2_CMD                 0x00000021
                                SC_P_USDHC2_DATA0_CONN_USDHC2_DATA0             0x00000021
                                SC_P_USDHC2_DATA1_CONN_USDHC2_DATA1             0x00000021
                                SC_P_USDHC2_DATA2_CONN_USDHC2_DATA2             0x00000021
                                SC_P_USDHC2_DATA3_CONN_USDHC2_DATA3             0x00000021
                                SC_P_USDHC1_VSELECT_CONN_USDHC1_VSELECT         0x00000021
                        >;
                };

                pinctrl_usdhc3_100mhz: usdhc3grp100mhz {
                        fsl,pins = <
                                SC_P_USDHC2_CLK_CONN_USDHC2_CLK                 0x06000040
                                SC_P_USDHC2_CMD_CONN_USDHC2_CMD                 0x00000020
                                SC_P_USDHC2_DATA0_CONN_USDHC2_DATA0             0x00000020
                                SC_P_USDHC2_DATA1_CONN_USDHC2_DATA1             0x00000020
                                SC_P_USDHC2_DATA2_CONN_USDHC2_DATA2             0x00000020
                                SC_P_USDHC2_DATA3_CONN_USDHC2_DATA3             0x00000020
                                SC_P_USDHC1_VSELECT_CONN_USDHC1_VSELECT         0x00000020
                        >;
                };

                pinctrl_usdhc3_200mhz: usdhc3grp200mhz {
                        fsl,pins = <
                                SC_P_USDHC2_CLK_CONN_USDHC2_CLK                 0x06000040
                                SC_P_USDHC2_CMD_CONN_USDHC2_CMD                 0x00000020
                                SC_P_USDHC2_DATA0_CONN_USDHC2_DATA0             0x00000020
                                SC_P_USDHC2_DATA1_CONN_USDHC2_DATA1             0x00000020
                                SC_P_USDHC2_DATA2_CONN_USDHC2_DATA2             0x00000020
                                SC_P_USDHC2_DATA3_CONN_USDHC2_DATA3             0x00000020
                                SC_P_USDHC1_VSELECT_CONN_USDHC1_VSELECT         0x00000020
                        >;
                };

                pinctrl_usdhc3_gpio: usdhc3grpgpio {
                        fsl,pins = <
                                SC_P_ESAI0_TX2_RX3_LSIO_GPIO2_IO28              0x00000021 /* WIFI IRQ */
                                SC_P_ESAI0_TX3_RX2_LSIO_GPIO2_IO29              0x00000021 /* WIFI RST */
                                SC_P_ESAI0_TX4_RX1_LSIO_GPIO2_IO30              0x00000021 /* WIFI CHIP_EN */
                        >;
                };

                pinctrl_fec1: fec1grp {
                        fsl,pins = <
                                SC_P_ENET0_MDC_CONN_ENET0_MDC                   0x06000020
                                SC_P_ENET0_MDIO_CONN_ENET0_MDIO                 0x06000020
                                SC_P_ENET0_RGMII_TX_CTL_CONN_ENET0_RGMII_TX_CTL 0x06000020
                                SC_P_ENET0_RGMII_TXC_CONN_ENET0_RGMII_TXC       0x06000020
                                SC_P_ENET0_RGMII_TXD0_CONN_ENET0_RGMII_TXD0     0x06000020
                                SC_P_ENET0_RGMII_TXD1_CONN_ENET0_RGMII_TXD1     0x06000020
                                SC_P_ENET0_RGMII_TXD2_CONN_ENET0_RGMII_TXD2     0x06000020
                                SC_P_ENET0_RGMII_TXD3_CONN_ENET0_RGMII_TXD3     0x06000020
                                SC_P_ENET0_RGMII_RXC_CONN_ENET0_RGMII_RXC       0x06000020
                                SC_P_ENET0_RGMII_RX_CTL_CONN_ENET0_RGMII_RX_CTL 0x06000020
                                SC_P_ENET0_RGMII_RXD0_CONN_ENET0_RGMII_RXD0     0x06000020
                                SC_P_ENET0_RGMII_RXD1_CONN_ENET0_RGMII_RXD1     0x06000020
                                SC_P_ENET0_RGMII_RXD2_CONN_ENET0_RGMII_RXD2     0x06000020
                                SC_P_ENET0_RGMII_RXD3_CONN_ENET0_RGMII_RXD3     0x06000020
                                SC_P_ENET0_REFCLK_125M_25M_CONN_ENET0_REFCLK_125M_25M   0x06000020
                                SC_P_PCIE_CTRL0_CLKREQ_B_LSIO_GPIO4_IO27        0x06000021
                                SC_P_PCIE_CTRL1_CLKREQ_B_LSIO_GPIO4_IO30        0x06000021
                                SC_P_PCIE_CTRL1_WAKE_B_LSIO_GPIO4_IO31          0x06000021
                        >;
                };

	};
};

&usdhc1 {
	/delete-property/ iommus;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

/*
&usdhc3 {
        compatible = "fsl,imx8qm-usdhc", "fsl,imx6sl-usdhc";
        interrupt-parent = <&gic>;
        /delete-property/ interrupt-parent;
        reg = <0x0 0x5b030000 0x0 0x10000>;
};*/

&usdhc3 {
	/delete-property/ iommus;
	interrupt-parent = <&gic>;
        pinctrl-names = "default","state_100mhz", "state_200mhz";
        pinctrl-0 = <&pinctrl_usdhc3>, <&pinctrl_usdhc3_gpio>;
        pinctrl-1 = <&pinctrl_usdhc3_100mhz>, <&pinctrl_usdhc3_gpio>;
        pinctrl-2 = <&pinctrl_usdhc3_200mhz>, <&pinctrl_usdhc3_gpio>;
        bus-width = <4>;
        non-removable;
        /* IWG27M: Fixed 1.8v for WIFI due to
         * PMIC ERRATA ER021:VSELECT Incorrect Setpoint */
        vmmc-supply = <&reg_3p3v>;
        wifi-host;
        status = "okay";
        wilc_sdio {
                compatible = "atmel-wilc3000";
                status ="okay";
        };
};

&usbotg1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usbotg1>;
        srp-disable;
        hnp-disable;
        adp-disable;
        otg-pwr-gpio = <&gpio4 3 GPIO_ACTIVE_LOW>;
        dr_mode = "otg";
        power-polarity-active-high;
        disable-over-current;
        status = "okay";
};

&i2c1_lvds1 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lvds1_lpi2c1>;
	clock-frequency = <100000>;
	status = "disabled";

	lvds-to-hdmi-bridge@4c {
		compatible = "ite,it6263";
		reg = <0x4c>;

		port {
			it6263_1_in: endpoint {
				clock-lanes = <3>;
				data-lanes = <0 1 2 4>;
				remote-endpoint = <&lvds1_out>;
			};
		};
	};
};

&irqsteer_dsi0 {
	status = "okay";
};

&mipi_dsi_csr1 {
	status = "okay";
};

&mipi_dsi_phy1 {
        status = "okay";
};

&mipi_dsi1 {
	status = "okay";
};

&mipi_dsi_bridge1 {
        status = "okay";

        panel@0 {
                reg = <0>;
		compatible = "raydium,rm67198";
                pinctrl-0 = <&pinctrl_mipi_dsi>;
                reset-gpio = <&gpio0 3 GPIO_ACTIVE_LOW>;
                dsi-lanes = <4>;
                panel-width-mm = <68>;
                panel-height-mm = <121>;
                port {
                        panel1_in: endpoint {
                                remote-endpoint = <&mipi_bridge1_out>;
                        };
                };
        };

        port@1 {
                mipi_bridge1_out: endpoint {
                        remote-endpoint = <&panel1_in>;
                };
        };
};

&i2c2 {
        #address-cells = <1>;
        #size-cells = <0>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_lpi2c2>;
        clock-frequency = <400000>;
        status = "okay";

        cst148@1a {
                compatible = "hynitron,cst1xx";
                reg = <0x1a>;
                interrupt-parent = <&gpio0>;
                interrupts = <1 2>;
                vdd_ana-supply = <&reg_touch>;
                vcc_i2c-supply = <&reg_touch>;
                hynitron,panel-coords = <0 1080 0 1920>;
                hynitron,display-coords = <0 1080 0 1920>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_ts_active_iwg27m>;
                hynitron,irq-gpio = <&gpio0 1 0>;
                hynitron,rst-gpio = <&gpio0 10 0>;
                report_type = <1>;
		status = "okay";
        };
/*
        goodix@5d {
                compatible = "goodix,gt1x";
                reg = <0x5d>;
                interrupt-parent = <&gpio0>;
                interrupts = <1 2>;
                vdd_ana-supply = <&reg_touch>;
                vcc_i2c-supply = <&reg_touch>;
                pinctrl-names = "ts_active";
                pinctrl-0 = <&pinctrl_ts_active_iwg27m>;
                goodix,irq-gpio = <&gpio0 1 GPIO_ACTIVE_LOW>;
        };
*/
};
/*
&xen_i2c1 {
        #address-cells = <1>;
        #size-cells = <0>;
        clock-frequency = <400000>;
        status = "okay";

        codec: sgtl5000@0a {
                compatible = "fsl,sgtl5000";
                reg = <0x0a>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_hp_mic_detect>;
                clocks = <&audioclk 0>;
                VDDA-supply = <&reg_1p8v>;
                VDDIO-supply = <&reg_1p8v>;
                VDDD-supply = <&reg_1p5v>;
                power-domains = <&pd_mclk_out0>;
                hp-det-gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
                mic-det-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
                status = "okay";
        };

        fusb30x@22 {
                compatible = "fairchild,fusb302";
                reg = <0x22>;
                fairchild,int_n = <&gpio0 0 0>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_type_c>;
                fairchild,cc = <&gpio5 23 0>;
                status = "okay";
        };
};
*/


&i2c1 {
        #address-cells = <1>;
        #size-cells = <0>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_lpi2c1>;
        clock-frequency = <400000>;
        status = "okay";

        codec: sgtl5000@0a {
                compatible = "fsl,sgtl5000";
                reg = <0x0a>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_hp_mic_detect>;
                clocks = <&audioclk 0>;
                VDDA-supply = <&reg_1p8v>;
                VDDIO-supply = <&reg_1p8v>;
                VDDD-supply = <&reg_1p5v>;
                power-domains = <&pd_mclk_out0>;
                hp-det-gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
                mic-det-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
                status = "okay";
        };

        fusb30x@22 {
                compatible = "fairchild,fusb302";
                reg = <0x22>;
                fairchild,int_n = <&gpio0 0 0>;
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_type_c>;
                fairchild,cc = <&gpio5 23 0>;
                status = "okay";
        };
};

&sai1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_sai1>;
	dmas = <&edma25 14 0 1>, <&edma25 15 0 0>;
        assigned-clocks = <&clk IMX8QM_ACM_ESAI0_MCLK_SEL>,
                          <&clk IMX8QM_AUD_PLL0_DIV>,
                          <&clk IMX8QM_AUD_ACM_AUD_PLL_CLK0_DIV>,
                          <&clk IMX8QM_AUD_ACM_AUD_REC_CLK0_DIV>,
                          <&clk IMX8QM_AUD_ESAI_0_EXTAL_IPG>;
        assigned-clock-parents = <&clk IMX8QM_AUD_ACM_AUD_PLL_CLK0_CLK>;
        assigned-clock-rates = <0>, <786432000>, <49152000>, <24576000>, <49152000>;
        status = "okay";
};

&intmux_cm41 {
	status = "okay";
};

&usbotg3 {
	interrupt-parent = <&gic>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usbotg3>;
        vusb-supply = <&reg_usb_en>;
        hub-reset-gpio = <&gpio1 21 GPIO_ACTIVE_HIGH>;
        dr_mode = "host";
        status = "okay";
};

&fec1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_fec1>;
        phy-mode = "rgmii";
        phy-supply = <&reg_3p3v>;
        phy-handle = <&ethphy0>;
        phy-reset-gpios = <&gpio4 31 GPIO_ACTIVE_LOW>;
        fsl,magic-packet;
        fsl,rgmii_txc_dly;
        fsl,rgmii_rxc_dly;
        fsl,ar8031-phy-fixup;
        fsl,mii-exclusive;
        status = "okay";
	/delete-property/ iommus;

        mdio {
                #address-cells = <1>;
                #size-cells = <0>;
                ethphy0: ethernet-phy@0 {
                        reg = <0x0>;
                        compatible = "ethernet-phy-ieee802.3-c22";
                        interrupts-extended = <&gpio4 27 IRQ_TYPE_LEVEL_LOW>;
                        at803x,led-act-blind-workaround;
                        at803x,eee-disabled;
                        at803x,vddio-1p8v;
                };
        };
};

